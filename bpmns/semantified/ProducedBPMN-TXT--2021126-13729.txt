Pool Name=1-Robot
Lane Name=Initiator TK01
Element type=class SemantifyingBPMN.Event, Name = INITIAL - (INITIAL) - type=(Start)
Element type=class SemantifyingBPMN.Activity, Name = Send New Data - (Request) - type=(SendTask)
Element type=class SemantifyingBPMN.Gateway, Name = converging gateway - (converging gateway) - type=(Exclusive)
Element type=class SemantifyingBPMN.Gateway, Name = Is product ok? - (Is product ok?) - type=(Exclusive)
Element type=class SemantifyingBPMN.Activity, Name = Accept Data Write - (Accept) - type=(SendTask)
Element type=class SemantifyingBPMN.Activity, Name = Reject Data Write - (Reject) - type=(SendTask)
Element type=class SemantifyingBPMN.Gateway, Name = Wait for Reject result - (Wait for Reject result) - type=(Eventbased)
Element type=class SemantifyingBPMN.Event, Name = Declare received - (Declare received) - type=(IntermediateMessageCatchEvent)
Element type=class SemantifyingBPMN.Event, Name = Stop received - (Stop received) - type=(IntermediateMessageCatchEvent)
Element type=class SemantifyingBPMN.Event, Name = END - (END) - type=(End)
Element type=class SemantifyingBPMN.Event, Name = END - (END) - type=(End)
--------*--------
Pool Name=2-Robot BPMN
Lane Name=Executor TK01
Element type=class SemantifyingBPMN.Event, Name = INITIAL - (INITIAL) - type=(Start)
Element type=class SemantifyingBPMN.Gateway, Name = DIVERGE_RaP - (DIVERGE_RaP) - type=(Inclusive)
Element type=class SemantifyingBPMN.Gateway, Name = CONVERGE_RaP - (CONVERGE_RaP) - type=(Inclusive)
Element type=class SemantifyingBPMN.Activity, Name = Save Data - (Execute) - type=(ManualTask)
Element type=class SemantifyingBPMN.Gateway, Name = converging - (converging) - type=(Exclusive)
Element type=class SemantifyingBPMN.Activity, Name = Declares saved data blockchain register - (Declare) - type=(SendTask)
Element type=class SemantifyingBPMN.Gateway, Name = Wait for Declare result - (Wait for Declare result) - type=(Eventbased)
Element type=class SemantifyingBPMN.Event, Name = Accept received - (Accept received) - type=(IntermediateMessageCatchEvent)
Element type=class SemantifyingBPMN.Event, Name = END - (END) - type=(End)
Element type=class SemantifyingBPMN.Activity, Name = Blockchain Error - (Stop) - type=(SendTask)
Element type=class SemantifyingBPMN.Event, Name = END - (END) - type=(End)
Element type=class SemantifyingBPMN.Gateway, Name = Agree with arguments? - (Agree with arguments?) - type=(Exclusive)
Element type=class SemantifyingBPMN.Event, Name = Reject received - (Reject received) - type=(IntermediateMessageCatchEvent)
Lane Name=Initiator TK02
Element type=class SemantifyingBPMN.Event, Name = INITIAL - (INITIAL) - type=(IntermediateCatchEvent)
Element type=class SemantifyingBPMN.Activity, Name = Pedido - (Request) - type=(SendTask)
Element type=class SemantifyingBPMN.Gateway, Name = converging gateway - (converging gateway) - type=(Exclusive)
Element type=class SemantifyingBPMN.Gateway, Name = Is product ok? - (Is product ok?) - type=(Exclusive)
Element type=class SemantifyingBPMN.Activity, Name = Aceita - (Accept) - type=(SendTask)
Element type=class SemantifyingBPMN.Activity, Name = rejeita - (Reject) - type=(SendTask)
Element type=class SemantifyingBPMN.Gateway, Name = Wait for Reject result - (Wait for Reject result) - type=(Eventbased)
Element type=class SemantifyingBPMN.Event, Name = Declare received - (Declare received) - type=(IntermediateMessageCatchEvent)
Element type=class SemantifyingBPMN.Event, Name = Stop received - (Stop received) - type=(IntermediateMessageCatchEvent)
Element type=class SemantifyingBPMN.Event, Name = END - (END) - type=(End)
--------*--------
Pool Name=3-Hospital
Lane Name=Executor TK02
Element type=class SemantifyingBPMN.Event, Name = INITIAL - (INITIAL) - type=(Start)
Element type=class SemantifyingBPMN.Activity, Name = Executar o pedido de compra - (Execute) - type=(ManualTask)
Element type=class SemantifyingBPMN.Gateway, Name = converging - (converging) - type=(Exclusive)
Element type=class SemantifyingBPMN.Activity, Name = Declara - (Declare) - type=(SendTask)
Element type=class SemantifyingBPMN.Gateway, Name = Wait for Declare result - (Wait for Declare result) - type=(Eventbased)
Element type=class SemantifyingBPMN.Event, Name = Accept received - (Accept received) - type=(IntermediateMessageCatchEvent)
Element type=class SemantifyingBPMN.Event, Name = END - (END) - type=(End)
Element type=class SemantifyingBPMN.Activity, Name = para - (Stop) - type=(SendTask)
Element type=class SemantifyingBPMN.Event, Name = END - (END) - type=(End)
Element type=class SemantifyingBPMN.Gateway, Name = Agree with arguments? - (Agree with arguments?) - type=(Exclusive)
Element type=class SemantifyingBPMN.Event, Name = Reject received - (Reject received) - type=(IntermediateMessageCatchEvent)
Lane Name=Initiator TK03
Element type=class SemantifyingBPMN.Event, Name = INITIAL - (INITIAL) - type=(IntermediateCatchEvent)
Element type=class SemantifyingBPMN.Activity, Name = Pedido - (Request) - type=(SendTask)
Element type=class SemantifyingBPMN.Gateway, Name = converging gateway - (converging gateway) - type=(Exclusive)
Element type=class SemantifyingBPMN.Gateway, Name = Is product ok? - (Is product ok?) - type=(Exclusive)
Element type=class SemantifyingBPMN.Activity, Name = Aceita - (Accept) - type=(SendTask)
Element type=class SemantifyingBPMN.Activity, Name = rejeita - (Reject) - type=(SendTask)
Element type=class SemantifyingBPMN.Gateway, Name = Wait for Reject result - (Wait for Reject result) - type=(Eventbased)
Element type=class SemantifyingBPMN.Event, Name = Declare received - (Declare received) - type=(IntermediateMessageCatchEvent)
Element type=class SemantifyingBPMN.Event, Name = Stop received - (Stop received) - type=(IntermediateMessageCatchEvent)
Element type=class SemantifyingBPMN.Event, Name = END - (END) - type=(End)
--------*--------
Pool Name=4-Assistance
Lane Name=Executor TK03
Element type=class SemantifyingBPMN.Event, Name = INITIAL - (INITIAL) - type=(Start)
Element type=class SemantifyingBPMN.Activity, Name = Executar o pedido de compra - (Execute) - type=(ManualTask)
Element type=class SemantifyingBPMN.Gateway, Name = converging - (converging) - type=(Exclusive)
Element type=class SemantifyingBPMN.Activity, Name = Declara - (Declare) - type=(SendTask)
Element type=class SemantifyingBPMN.Gateway, Name = Wait for Declare result - (Wait for Declare result) - type=(Eventbased)
Element type=class SemantifyingBPMN.Event, Name = Accept received - (Accept received) - type=(IntermediateMessageCatchEvent)
Element type=class SemantifyingBPMN.Event, Name = END - (END) - type=(End)
Element type=class SemantifyingBPMN.Activity, Name = para - (Stop) - type=(SendTask)
Element type=class SemantifyingBPMN.Event, Name = END - (END) - type=(End)
Element type=class SemantifyingBPMN.Gateway, Name = Agree with arguments? - (Agree with arguments?) - type=(Exclusive)
Element type=class SemantifyingBPMN.Event, Name = Reject received - (Reject received) - type=(IntermediateMessageCatchEvent)
--------*--------
